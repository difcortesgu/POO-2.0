package Ejercicio3;

import becker.robots.*;

public class Creator {
    
    public static void main(String[] args) {
    
    City C = new City();
    
    Robot H = new Robot (C, 0, 0, Direction.SOUTH);
    Robot E = new Robot (C, 0, 1, Direction.SOUTH);
    Robot L = new Robot (C, 0, 2, Direction.SOUTH);
    Robot LL = new Robot (C, 0, 3, Direction.SOUTH);
    Robot O = new Robot (C, 0, 4, Direction.SOUTH);
    
        for (int i = 0; i < 11; i++) {
            Thing h = new Thing (C, 0, 0);
            H.pickThing();
        }
        for (int i = 0; i < 11; i++) {
            Thing e = new Thing (C, 0, 1);
            E.pickThing();
        }
        for (int i = 0; i < 7; i++) {
            Thing l = new Thing (C, 0, 2);
            L.pickThing();
        }
        for (int i = 0; i < 7; i++) {
            Thing ll = new Thing (C, 0, 3);
            LL.pickThing();
        }
        for (int i = 0; i < 12; i++) {
            Thing o = new Thing (C, 0, 4);
            O.pickThing();
        }
        
        H.move();
        H.turnLeft();
        H.move();
        H.putThing();
        H.turnLeft();
        H.turnLeft();
        H.turnLeft();
        H.move();
        H.putThing();
        H.move();
        H.putThing();
        H.move();
        H.putThing();
        H.move();
        H.putThing();
        H.turnLeft();
        H.move();
        H.move();
        H.turnLeft();
        H.putThing();
        H.move();
        H.putThing();
        H.move();
        H.putThing();
        H.move();
        H.putThing();
        H.move();
        H.putThing();
        H.turnLeft();
        H.move();
        H.turnLeft();
        H.move();
        H.move();
        H.putThing();
        H.move();
        H.move();
        H.move();
        E.move();
        E.turnLeft();
        E.move();
        E.move();
        E.move();
        E.move();
        E.turnLeft();
        E.turnLeft();
        E.turnLeft();
        E.putThing();
        E.move();
        E.putThing();
        E.move();
        E.putThing();
        E.move();
        E.putThing();
        E.move();
        E.putThing();
        E.turnLeft();
        E.move();
        E.putThing();
        E.move();
        E.putThing();
        E.turnLeft();
        E.move();
        E.move();
        E.putThing();
        E.move();
        E.move();
        E.putThing();
        E.turnLeft();
        E.move();
        E.putThing();
        E.turnLeft();
        E.move();
        E.move();
        E.putThing();
        E.move();
        E.move();
        E.move();
        L.move();
        L.turnLeft();
        L.move();
        L.move();
        L.move();
        L.move();
        L.move();
        L.move();
        L.move();
        L.turnLeft();
        L.turnLeft();
        L.turnLeft();
        L.putThing();
        L.move();
        L.putThing();
        L.move();
        L.putThing();
        L.move();
        L.putThing();
        L.move();
        L.putThing();
        L.turnLeft();
        L.move();
        L.putThing();
        L.move();
        L.putThing();
        L.turnLeft();
        L.turnLeft();
        L.turnLeft();
        L.move();
        LL.move();
        LL.turnLeft();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.move();
        LL.turnLeft();
        LL.turnLeft();
        LL.turnLeft();
        LL.putThing();
        LL.move();
        LL.putThing();
        LL.move();
        LL.putThing();
        LL.move();
        LL.putThing();
        LL.move();
        LL.putThing();
        LL.turnLeft();
        LL.move();
        LL.putThing();
        LL.move();
        LL.putThing();
        LL.turnLeft();
        LL.turnLeft();
        LL.turnLeft();
        LL.move();
        O.move();
        O.turnLeft();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
        O.turnLeft();
        O.turnLeft();
        O.turnLeft();
        O.putThing();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.turnLeft();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.turnLeft();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.move();
        O.putThing();
        O.turnLeft();
        O.move();
        O.putThing();
        O.turnLeft();
        O.move();
        O.move();
        O.move();
        O.move();
        O.move();
    }
}
